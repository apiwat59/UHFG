package jxl.demo;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import jxl.CellReferenceHelper;
import jxl.CellView;
import jxl.HeaderFooter;
import jxl.Range;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.format.Alignment;
import jxl.format.Border;
import jxl.format.BorderLineStyle;
import jxl.format.Colour;
import jxl.format.Orientation;
import jxl.format.PageOrder;
import jxl.format.PageOrientation;
import jxl.format.PaperSize;
import jxl.format.ScriptStyle;
import jxl.format.UnderlineStyle;
import jxl.write.Blank;
import jxl.write.Boolean;
import jxl.write.DateFormat;
import jxl.write.DateFormats;
import jxl.write.DateTime;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.Number;
import jxl.write.NumberFormat;
import jxl.write.NumberFormats;
import jxl.write.WritableCellFeatures;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableHyperlink;
import jxl.write.WritableImage;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/* loaded from: classes.dex */
public class Write {
    private String filename;
    private WritableWorkbook workbook;

    public Write(String fn) {
        this.filename = fn;
    }

    public void write() throws IOException, WriteException {
        WorkbookSettings ws = new WorkbookSettings();
        ws.setLocale(new Locale("en", "EN"));
        WritableWorkbook createWorkbook = Workbook.createWorkbook(new File(this.filename), ws);
        this.workbook = createWorkbook;
        WritableSheet s2 = createWorkbook.createSheet("Number Formats", 0);
        WritableSheet s3 = this.workbook.createSheet("Date Formats", 1);
        WritableSheet s1 = this.workbook.createSheet("Label Formats", 2);
        WritableSheet s4 = this.workbook.createSheet("Borders", 3);
        WritableSheet s5 = this.workbook.createSheet("Labels", 4);
        WritableSheet s6 = this.workbook.createSheet("Formulas", 5);
        WritableSheet s7 = this.workbook.createSheet("Images", 6);
        this.workbook.setColourRGB(Colour.LIME, 255, 0, 0);
        this.workbook.addNameArea("namedrange", s4, 1, 11, 5, 14);
        this.workbook.addNameArea("validation_range", s1, 4, 65, 9, 65);
        this.workbook.addNameArea("formulavalue", s6, 1, 45, 1, 45);
        s5.getSettings().setPrintArea(4, 4, 15, 35);
        writeLabelFormatSheet(s1);
        writeNumberFormatSheet(s2);
        writeDateFormatSheet(s3);
        writeBordersSheet(s4);
        writeLabelsSheet(s5);
        writeFormulaSheet(s6);
        writeImageSheet(s7);
        this.workbook.write();
        this.workbook.close();
    }

    private void writeNumberFormatSheet(WritableSheet s) throws WriteException {
        Label l;
        WritableCellFormat wrappedText = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
        wrappedText.setWrap(true);
        s.setColumnView(0, 20);
        s.setColumnView(4, 20);
        s.setColumnView(5, 20);
        s.setColumnView(6, 20);
        Label l2 = new Label(0, 0, "+/- Pi - default format", wrappedText);
        s.addCell(l2);
        Number n = new Number(1, 0, 3.1415926535d);
        s.addCell(n);
        Number n2 = new Number(2, 0, -3.1415926535d);
        s.addCell(n2);
        Label l3 = new Label(0, 1, "+/- Pi - integer format", wrappedText);
        s.addCell(l3);
        WritableCellFormat cf1 = new WritableCellFormat(NumberFormats.INTEGER);
        Number n3 = new Number(1, 1, 3.1415926535d, cf1);
        s.addCell(n3);
        Number n4 = new Number(2, 1, -3.1415926535d, cf1);
        s.addCell(n4);
        Label l4 = new Label(0, 2, "+/- Pi - float 2dps", wrappedText);
        s.addCell(l4);
        WritableCellFormat cf2 = new WritableCellFormat(NumberFormats.FLOAT);
        Number n5 = new Number(1, 2, 3.1415926535d, cf2);
        s.addCell(n5);
        Number n6 = new Number(2, 2, -3.1415926535d, cf2);
        s.addCell(n6);
        Label l5 = new Label(0, 3, "+/- Pi - custom 3dps", wrappedText);
        s.addCell(l5);
        NumberFormat dp3 = new NumberFormat("#.###");
        WritableCellFormat dp3cell = new WritableCellFormat(dp3);
        Number n7 = new Number(1, 3, 3.1415926535d, dp3cell);
        s.addCell(n7);
        Number n8 = new Number(2, 3, -3.1415926535d, dp3cell);
        s.addCell(n8);
        Label l6 = new Label(0, 4, "+/- Pi - custom &3.14", wrappedText);
        s.addCell(l6);
        NumberFormat pounddp2 = new NumberFormat("&#.00");
        WritableCellFormat pounddp2cell = new WritableCellFormat(pounddp2);
        Number n9 = new Number(1, 4, 3.1415926535d, pounddp2cell);
        s.addCell(n9);
        Number n10 = new Number(2, 4, -3.1415926535d, pounddp2cell);
        s.addCell(n10);
        Label l7 = new Label(0, 5, "+/- Pi - custom Text #.### Text", wrappedText);
        s.addCell(l7);
        NumberFormat textdp4 = new NumberFormat("Text#.####Text");
        WritableCellFormat textdp4cell = new WritableCellFormat(textdp4);
        Number n11 = new Number(1, 5, 3.1415926535d, textdp4cell);
        s.addCell(n11);
        Number n12 = new Number(2, 5, -3.1415926535d, textdp4cell);
        s.addCell(n12);
        Label l8 = new Label(4, 0, "+/- Bilko default format");
        s.addCell(l8);
        Number n13 = new Number(5, 0, 1.5042699E7d);
        s.addCell(n13);
        Number n14 = new Number(6, 0, -1.5042699E7d);
        s.addCell(n14);
        Label l9 = new Label(4, 1, "+/- Bilko float format");
        s.addCell(l9);
        WritableCellFormat cfi1 = new WritableCellFormat(NumberFormats.FLOAT);
        Number n15 = new Number(5, 1, 1.5042699E7d, cfi1);
        s.addCell(n15);
        Number n16 = new Number(6, 1, -1.5042699E7d, cfi1);
        s.addCell(n16);
        Label l10 = new Label(4, 2, "+/- Thousands separator");
        s.addCell(l10);
        WritableCellFormat cfi2 = new WritableCellFormat(NumberFormats.THOUSANDS_INTEGER);
        Number n17 = new Number(5, 2, 1.5042699E7d, cfi2);
        s.addCell(n17);
        Number n18 = new Number(6, 2, -1.5042699E7d, cfi2);
        s.addCell(n18);
        Label l11 = new Label(4, 3, "+/- Accounting red - added 0.01");
        s.addCell(l11);
        WritableCellFormat cfi3 = new WritableCellFormat(NumberFormats.ACCOUNTING_RED_FLOAT);
        Number n19 = new Number(5, 3, 1.504269901E7d, cfi3);
        s.addCell(n19);
        Number n20 = new Number(6, 3, -1.504269901E7d, cfi3);
        s.addCell(n20);
        Label l12 = new Label(4, 4, "+/- Percent");
        s.addCell(l12);
        WritableCellFormat cfi4 = new WritableCellFormat(NumberFormats.PERCENT_INTEGER);
        Number n21 = new Number(5, 4, 1.5042699E7d, cfi4);
        s.addCell(n21);
        Number n22 = new Number(6, 4, -1.5042699E7d, cfi4);
        s.addCell(n22);
        Label l13 = new Label(4, 5, "+/- Exponential - 2dps");
        s.addCell(l13);
        WritableCellFormat cfi5 = new WritableCellFormat(NumberFormats.EXPONENTIAL);
        Number n23 = new Number(5, 5, 1.5042699E7d, cfi5);
        s.addCell(n23);
        Number n24 = new Number(6, 5, -1.5042699E7d, cfi5);
        s.addCell(n24);
        Label l14 = new Label(4, 6, "+/- Custom exponentional - 3dps", wrappedText);
        s.addCell(l14);
        NumberFormat edp3 = new NumberFormat("0.000E0");
        WritableCellFormat edp3Cell = new WritableCellFormat(edp3);
        Number n25 = new Number(5, 6, 1.5042699E7d, edp3Cell);
        s.addCell(n25);
        Number n26 = new Number(6, 6, -1.5042699E7d, edp3Cell);
        s.addCell(n26);
        Label l15 = new Label(4, 7, "Custom neg brackets", wrappedText);
        s.addCell(l15);
        NumberFormat negbracks = new NumberFormat("#,##0;(#,##0)");
        WritableCellFormat negbrackscell = new WritableCellFormat(negbracks);
        Number n27 = new Number(5, 7, 1.5042699E7d, negbrackscell);
        s.addCell(n27);
        Number n28 = new Number(6, 7, -1.5042699E7d, negbrackscell);
        s.addCell(n28);
        Label l16 = new Label(4, 8, "Custom neg brackets 2", wrappedText);
        s.addCell(l16);
        NumberFormat negbracks2 = new NumberFormat("#,##0;(#,##0)a");
        WritableCellFormat negbrackscell2 = new WritableCellFormat(negbracks2);
        Number n29 = new Number(5, 8, 1.5042699E7d, negbrackscell2);
        s.addCell(n29);
        Number n30 = new Number(6, 8, -1.5042699E7d, negbrackscell2);
        s.addCell(n30);
        Label l17 = new Label(4, 9, "Custom percent", wrappedText);
        s.addCell(l17);
        NumberFormat cuspercent = new NumberFormat("0.0%");
        WritableCellFormat cuspercentf = new WritableCellFormat(cuspercent);
        Number n31 = new Number(5, 9, 3.14159265d, cuspercentf);
        s.addCell(n31);
        Label l18 = new Label(0, 10, "Boolean - TRUE");
        s.addCell(l18);
        Boolean b = new Boolean(1, 10, true);
        s.addCell(b);
        Label l19 = new Label(0, 11, "Boolean - FALSE");
        s.addCell(l19);
        Boolean b2 = new Boolean(1, 11, false);
        s.addCell(b2);
        Label l20 = new Label(0, 12, "A hidden cell->");
        s.addCell(l20);
        Number n32 = new Number(1, 12, 17.0d, WritableWorkbook.HIDDEN_STYLE);
        s.addCell(n32);
        Label l21 = new Label(4, 19, "Currency formats");
        s.addCell(l21);
        Label l22 = new Label(4, 21, "UK Pound");
        s.addCell(l22);
        NumberFormat poundCurrency = new NumberFormat("� #,###.00", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat poundFormat = new WritableCellFormat(poundCurrency);
        Number n33 = new Number(5, 21, 12345.0d, poundFormat);
        s.addCell(n33);
        Label l23 = new Label(4, 22, "Euro 1");
        s.addCell(l23);
        NumberFormat euroPrefixCurrency = new NumberFormat("[$�-2] #,###.00", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat euroPrefixFormat = new WritableCellFormat(euroPrefixCurrency);
        Number n34 = new Number(5, 22, 12345.0d, euroPrefixFormat);
        s.addCell(n34);
        Label l24 = new Label(4, 23, "Euro 2");
        s.addCell(l24);
        NumberFormat euroSuffixCurrency = new NumberFormat("#,###.00[$�-1]", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat euroSuffixFormat = new WritableCellFormat(euroSuffixCurrency);
        Number n35 = new Number(5, 23, 12345.0d, euroSuffixFormat);
        s.addCell(n35);
        Label l25 = new Label(4, 24, "Dollar");
        s.addCell(l25);
        NumberFormat dollarCurrency = new NumberFormat("[$$-409] #,###.00", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat dollarFormat = new WritableCellFormat(dollarCurrency);
        Number n36 = new Number(5, 24, 12345.0d, dollarFormat);
        s.addCell(n36);
        Label l26 = new Label(4, 25, "Japanese Yen");
        s.addCell(l26);
        NumberFormat japaneseYenCurrency = new NumberFormat("[$�-411] #,###.00", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat japaneseYenFormat = new WritableCellFormat(japaneseYenCurrency);
        Number n37 = new Number(5, 25, 12345.0d, japaneseYenFormat);
        s.addCell(n37);
        Label l27 = new Label(4, 30, "Fraction formats");
        s.addCell(l27);
        Label l28 = new Label(4, 32, "One digit fraction format", wrappedText);
        s.addCell(l28);
        WritableCellFormat fraction1digitformat = new WritableCellFormat(NumberFormats.FRACTION_ONE_DIGIT);
        Number n38 = new Number(5, 32, 3.18279d, fraction1digitformat);
        s.addCell(n38);
        Label l29 = new Label(4, 33, "Two digit fraction format", wrappedText);
        s.addCell(l29);
        WritableCellFormat fraction2digitformat = new WritableCellFormat(NumberFormats.FRACTION_TWO_DIGITS);
        Number n39 = new Number(5, 33, 3.18279d, fraction2digitformat);
        s.addCell(n39);
        Label l30 = new Label(4, 34, "Three digit fraction format (improper)", wrappedText);
        s.addCell(l30);
        NumberFormat fraction3digit1 = new NumberFormat(NumberFormat.FRACTION_THREE_DIGITS, NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat fraction3digitformat1 = new WritableCellFormat(fraction3digit1);
        Number n40 = new Number(5, 34, 3.18927d, fraction3digitformat1);
        s.addCell(n40);
        Label l31 = new Label(4, 35, "Three digit fraction format (proper)", wrappedText);
        s.addCell(l31);
        NumberFormat fraction3digit2 = new NumberFormat("# ???/???", NumberFormat.COMPLEX_FORMAT);
        WritableCellFormat fraction3digitformat2 = new WritableCellFormat(fraction3digit2);
        Number n41 = new Number(5, 35, 3.18927d, fraction3digitformat2);
        s.addCell(n41);
        int row = 0;
        while (true) {
            WritableCellFormat wrappedText2 = wrappedText;
            if (row >= 100) {
                break;
            }
            int col = 8;
            while (true) {
                l = l31;
                if (col < 108) {
                    Number n42 = new Number(col, row, col + row);
                    s.addCell(n42);
                    col++;
                    l31 = l;
                    fraction3digit2 = fraction3digit2;
                    fraction3digit1 = fraction3digit1;
                }
            }
            row++;
            wrappedText = wrappedText2;
            l31 = l;
        }
        for (int row2 = 101; row2 < 3000; row2++) {
            int col2 = 0;
            while (col2 < 25) {
                Number n43 = new Number(col2, row2, col2 + row2);
                s.addCell(n43);
                col2++;
                edp3 = edp3;
                poundCurrency = poundCurrency;
            }
        }
    }

    private void writeDateFormatSheet(WritableSheet s) throws WriteException {
        WritableCellFormat wrappedText = new WritableCellFormat(WritableWorkbook.ARIAL_10_PT);
        wrappedText.setWrap(true);
        s.setColumnView(0, 20);
        s.setColumnView(2, 20);
        s.setColumnView(3, 20);
        s.setColumnView(4, 20);
        s.getSettings().setFitWidth(2);
        s.getSettings().setFitHeight(2);
        Calendar c = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        c.set(1975, 4, 31, 15, 21, 45);
        c.set(14, 660);
        Date date = c.getTime();
        c.set(1900, 0, 1, 0, 0, 0);
        c.set(14, 0);
        Date date2 = c.getTime();
        c.set(1970, 0, 1, 0, 0, 0);
        Date date3 = c.getTime();
        c.set(1918, 10, 11, 11, 0, 0);
        Date date4 = c.getTime();
        c.set(1900, 0, 2, 0, 0, 0);
        Date date5 = c.getTime();
        c.set(1901, 0, 1, 0, 0, 0);
        Date date6 = c.getTime();
        c.set(1900, 4, 31, 0, 0, 0);
        Date date7 = c.getTime();
        c.set(1900, 1, 1, 0, 0, 0);
        Date date8 = c.getTime();
        c.set(1900, 0, 31, 0, 0, 0);
        Date date9 = c.getTime();
        c.set(1900, 2, 1, 0, 0, 0);
        Date date10 = c.getTime();
        c.set(1900, 1, 27, 0, 0, 0);
        Date date11 = c.getTime();
        c.set(1900, 1, 28, 0, 0, 0);
        Date date12 = c.getTime();
        c.set(1980, 5, 31, 12, 0, 0);
        Date date13 = c.getTime();
        c.set(1066, 9, 14, 0, 0, 0);
        Date date14 = c.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd MMM yyyy HH:mm:ss.SSS");
        sdf.setTimeZone(TimeZone.getTimeZone("GMT"));
        Label l = new Label(0, 0, "All dates are " + sdf.format(date), wrappedText);
        s.addCell(l);
        Label l2 = new Label(0, 1, "Built in formats", wrappedText);
        s.addCell(l2);
        Label l3 = new Label(2, 1, "Custom formats");
        s.addCell(l3);
        WritableCellFormat cf1 = new WritableCellFormat(DateFormats.FORMAT1);
        DateTime dt = new DateTime(0, 2, date, cf1, DateTime.GMT);
        s.addCell(dt);
        WritableCellFormat cf12 = new WritableCellFormat(DateFormats.FORMAT2);
        DateTime dt2 = new DateTime(0, 3, date, cf12, DateTime.GMT);
        s.addCell(dt2);
        WritableCellFormat cf13 = new WritableCellFormat(DateFormats.FORMAT3);
        DateTime dt3 = new DateTime(0, 4, date, cf13);
        s.addCell(dt3);
        WritableCellFormat cf14 = new WritableCellFormat(DateFormats.FORMAT4);
        DateTime dt4 = new DateTime(0, 5, date, cf14);
        s.addCell(dt4);
        WritableCellFormat cf15 = new WritableCellFormat(DateFormats.FORMAT5);
        DateTime dt5 = new DateTime(0, 6, date, cf15);
        s.addCell(dt5);
        WritableCellFormat cf16 = new WritableCellFormat(DateFormats.FORMAT6);
        DateTime dt6 = new DateTime(0, 7, date, cf16);
        s.addCell(dt6);
        WritableCellFormat cf17 = new WritableCellFormat(DateFormats.FORMAT7);
        DateTime dt7 = new DateTime(0, 8, date, cf17, DateTime.GMT);
        s.addCell(dt7);
        WritableCellFormat cf18 = new WritableCellFormat(DateFormats.FORMAT8);
        DateTime dt8 = new DateTime(0, 9, date, cf18, DateTime.GMT);
        s.addCell(dt8);
        WritableCellFormat cf19 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt9 = new DateTime(0, 10, date, cf19, DateTime.GMT);
        s.addCell(dt9);
        WritableCellFormat cf110 = new WritableCellFormat(DateFormats.FORMAT10);
        DateTime dt10 = new DateTime(0, 11, date, cf110, DateTime.GMT);
        s.addCell(dt10);
        WritableCellFormat cf111 = new WritableCellFormat(DateFormats.FORMAT11);
        DateTime dt11 = new DateTime(0, 12, date, cf111, DateTime.GMT);
        s.addCell(dt11);
        WritableCellFormat cf112 = new WritableCellFormat(DateFormats.FORMAT12);
        DateTime dt12 = new DateTime(0, 13, date, cf112, DateTime.GMT);
        s.addCell(dt12);
        DateFormat df = new DateFormat("dd MM yyyy");
        WritableCellFormat cf113 = new WritableCellFormat(df);
        Label l4 = new Label(2, 2, "dd MM yyyy");
        s.addCell(l4);
        DateTime dt13 = new DateTime(3, 2, date, cf113, DateTime.GMT);
        s.addCell(dt13);
        DateFormat df2 = new DateFormat("dd MMM yyyy");
        WritableCellFormat cf114 = new WritableCellFormat(df2);
        Label l5 = new Label(2, 3, "dd MMM yyyy");
        s.addCell(l5);
        DateTime dt14 = new DateTime(3, 3, date, cf114, DateTime.GMT);
        s.addCell(dt14);
        DateFormat df3 = new DateFormat("hh:mm");
        WritableCellFormat cf115 = new WritableCellFormat(df3);
        Label l6 = new Label(2, 4, "hh:mm");
        s.addCell(l6);
        DateTime dt15 = new DateTime(3, 4, date, cf115, DateTime.GMT);
        s.addCell(dt15);
        DateFormat df4 = new DateFormat("hh:mm:ss");
        WritableCellFormat cf116 = new WritableCellFormat(df4);
        Label l7 = new Label(2, 5, "hh:mm:ss");
        s.addCell(l7);
        DateTime dt16 = new DateTime(3, 5, date, cf116, DateTime.GMT);
        s.addCell(dt16);
        DateFormat df5 = new DateFormat("H:mm:ss a");
        WritableCellFormat cf117 = new WritableCellFormat(df5);
        Label l8 = new Label(2, 5, "H:mm:ss a");
        s.addCell(l8);
        DateTime dt17 = new DateTime(3, 5, date, cf117, DateTime.GMT);
        s.addCell(dt17);
        DateTime dt18 = new DateTime(4, 5, date13, cf117, DateTime.GMT);
        s.addCell(dt18);
        DateFormat df6 = new DateFormat("mm:ss.SSS");
        WritableCellFormat cf118 = new WritableCellFormat(df6);
        Label l9 = new Label(2, 6, "mm:ss.SSS");
        s.addCell(l9);
        DateTime dt19 = new DateTime(3, 6, date, cf118, DateTime.GMT);
        s.addCell(dt19);
        DateFormat df7 = new DateFormat("hh:mm:ss a");
        WritableCellFormat cf119 = new WritableCellFormat(df7);
        Label l10 = new Label(2, 7, "hh:mm:ss a");
        s.addCell(l10);
        DateTime dt20 = new DateTime(4, 7, date13, cf119, DateTime.GMT);
        s.addCell(dt20);
        Label l11 = new Label(0, 16, "Zero date " + sdf.format(date2), wrappedText);
        s.addCell(l11);
        WritableCellFormat cf120 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt21 = new DateTime(0, 17, date2, cf120, DateTime.GMT);
        s.addCell(dt21);
        Label l12 = new Label(3, 16, "Zero date + 1 " + sdf.format(date5), wrappedText);
        s.addCell(l12);
        WritableCellFormat cf121 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt22 = new DateTime(3, 17, date5, cf121, DateTime.GMT);
        s.addCell(dt22);
        Label l13 = new Label(3, 19, sdf.format(date6), wrappedText);
        s.addCell(l13);
        WritableCellFormat cf122 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt23 = new DateTime(3, 20, date6, cf122, DateTime.GMT);
        s.addCell(dt23);
        Label l14 = new Label(3, 22, sdf.format(date7), wrappedText);
        s.addCell(l14);
        WritableCellFormat cf123 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt24 = new DateTime(3, 23, date7, cf123, DateTime.GMT);
        s.addCell(dt24);
        Label l15 = new Label(3, 25, sdf.format(date8), wrappedText);
        s.addCell(l15);
        WritableCellFormat cf124 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt25 = new DateTime(3, 26, date8, cf124, DateTime.GMT);
        s.addCell(dt25);
        Label l16 = new Label(3, 28, sdf.format(date9), wrappedText);
        s.addCell(l16);
        WritableCellFormat cf125 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt26 = new DateTime(3, 29, date9, cf125, DateTime.GMT);
        s.addCell(dt26);
        Label l17 = new Label(3, 28, sdf.format(date9), wrappedText);
        s.addCell(l17);
        WritableCellFormat cf126 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt27 = new DateTime(3, 29, date9, cf126, DateTime.GMT);
        s.addCell(dt27);
        Label l18 = new Label(3, 31, sdf.format(date10), wrappedText);
        s.addCell(l18);
        WritableCellFormat cf127 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt28 = new DateTime(3, 32, date10, cf127, DateTime.GMT);
        s.addCell(dt28);
        Label l19 = new Label(3, 34, sdf.format(date11), wrappedText);
        s.addCell(l19);
        WritableCellFormat cf128 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt29 = new DateTime(3, 35, date11, cf128, DateTime.GMT);
        s.addCell(dt29);
        Label l20 = new Label(3, 37, sdf.format(date12), wrappedText);
        s.addCell(l20);
        WritableCellFormat cf129 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt30 = new DateTime(3, 38, date12, cf129, DateTime.GMT);
        s.addCell(dt30);
        Label l21 = new Label(0, 19, "Zero UTC date " + sdf.format(date3), wrappedText);
        s.addCell(l21);
        WritableCellFormat cf130 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt31 = new DateTime(0, 20, date3, cf130, DateTime.GMT);
        s.addCell(dt31);
        Label l22 = new Label(0, 22, "Armistice date " + sdf.format(date4), wrappedText);
        s.addCell(l22);
        WritableCellFormat cf131 = new WritableCellFormat(DateFormats.FORMAT9);
        DateTime dt32 = new DateTime(0, 23, date4, cf131, DateTime.GMT);
        s.addCell(dt32);
        Label l23 = new Label(0, 25, "Battle of Hastings " + sdf.format(date14), wrappedText);
        s.addCell(l23);
        WritableCellFormat cf132 = new WritableCellFormat(DateFormats.FORMAT2);
        DateTime dt33 = new DateTime(0, 26, date14, cf132, DateTime.GMT);
        s.addCell(dt33);
    }

    private void writeLabelFormatSheet(WritableSheet s1) throws WriteException {
        WritableFont times12pt;
        WritableCellFormat arial12format;
        WritableCellFormat timesBoldUnderline;
        int i;
        s1.setColumnView(0, 60);
        Label lr = new Label(0, 0, "Arial Fonts");
        s1.addCell(lr);
        Label lr2 = new Label(1, 0, "10pt");
        s1.addCell(lr2);
        Label lr3 = new Label(2, 0, "Normal");
        s1.addCell(lr3);
        Label lr4 = new Label(3, 0, "12pt");
        s1.addCell(lr4);
        WritableFont arial12pt = new WritableFont(WritableFont.ARIAL, 12);
        WritableCellFormat arial12format2 = new WritableCellFormat(arial12pt);
        arial12format2.setWrap(true);
        Label lr5 = new Label(4, 0, "Normal", arial12format2);
        s1.addCell(lr5);
        WritableFont arial10ptBold = new WritableFont(WritableFont.ARIAL, 10, WritableFont.BOLD);
        WritableCellFormat arial10BoldFormat = new WritableCellFormat(arial10ptBold);
        Label lr6 = new Label(2, 2, "BOLD", arial10BoldFormat);
        s1.addCell(lr6);
        WritableFont arial12ptBold = new WritableFont(WritableFont.ARIAL, 12, WritableFont.BOLD);
        WritableCellFormat arial12BoldFormat = new WritableCellFormat(arial12ptBold);
        Label lr7 = new Label(4, 2, "BOLD", arial12BoldFormat);
        s1.addCell(lr7);
        WritableFont arial10ptItalic = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, true);
        WritableCellFormat arial10ItalicFormat = new WritableCellFormat(arial10ptItalic);
        Label lr8 = new Label(2, 4, "Italic", arial10ItalicFormat);
        s1.addCell(lr8);
        WritableFont arial12ptItalic = new WritableFont(WritableFont.ARIAL, 12, WritableFont.NO_BOLD, true);
        WritableCellFormat arial12ptItalicFormat = new WritableCellFormat(arial12ptItalic);
        Label lr9 = new Label(4, 4, "Italic", arial12ptItalicFormat);
        s1.addCell(lr9);
        WritableFont times10pt = new WritableFont(WritableFont.TIMES, 10);
        WritableCellFormat times10format = new WritableCellFormat(times10pt);
        Label lr10 = new Label(0, 7, "Times Fonts", times10format);
        s1.addCell(lr10);
        Label lr11 = new Label(1, 7, "10pt", times10format);
        s1.addCell(lr11);
        Label lr12 = new Label(2, 7, "Normal", times10format);
        s1.addCell(lr12);
        Label lr13 = new Label(3, 7, "12pt", times10format);
        s1.addCell(lr13);
        WritableFont times12pt2 = new WritableFont(WritableFont.TIMES, 12);
        WritableCellFormat times12format = new WritableCellFormat(times12pt2);
        Label lr14 = new Label(4, 7, "Normal", times12format);
        s1.addCell(lr14);
        WritableFont times10ptBold = new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD);
        WritableCellFormat times10BoldFormat = new WritableCellFormat(times10ptBold);
        Label lr15 = new Label(2, 9, "BOLD", times10BoldFormat);
        s1.addCell(lr15);
        WritableFont times12ptBold = new WritableFont(WritableFont.TIMES, 12, WritableFont.BOLD);
        WritableCellFormat times12BoldFormat = new WritableCellFormat(times12ptBold);
        Label lr16 = new Label(4, 9, "BOLD", times12BoldFormat);
        s1.addCell(lr16);
        s1.setColumnView(6, 22);
        s1.setColumnView(7, 22);
        s1.setColumnView(8, 22);
        s1.setColumnView(9, 22);
        Label lr17 = new Label(0, 11, "Underlining");
        s1.addCell(lr17);
        WritableFont arial10ptUnderline = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE);
        WritableCellFormat arialUnderline = new WritableCellFormat(arial10ptUnderline);
        Label lr18 = new Label(6, 11, "Underline", arialUnderline);
        s1.addCell(lr18);
        WritableFont arial10ptDoubleUnderline = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE);
        WritableCellFormat arialDoubleUnderline = new WritableCellFormat(arial10ptDoubleUnderline);
        Label lr19 = new Label(7, 11, "Double Underline", arialDoubleUnderline);
        s1.addCell(lr19);
        WritableFont arial10ptSingleAcc = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.SINGLE_ACCOUNTING);
        WritableCellFormat arialSingleAcc = new WritableCellFormat(arial10ptSingleAcc);
        Label lr20 = new Label(8, 11, "Single Accounting Underline", arialSingleAcc);
        s1.addCell(lr20);
        WritableFont arial10ptDoubleAcc = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.DOUBLE_ACCOUNTING);
        WritableCellFormat arialDoubleAcc = new WritableCellFormat(arial10ptDoubleAcc);
        Label lr21 = new Label(9, 11, "Double Accounting Underline", arialDoubleAcc);
        s1.addCell(lr21);
        WritableFont times14ptBoldUnderline = new WritableFont(WritableFont.TIMES, 14, WritableFont.BOLD, false, UnderlineStyle.SINGLE);
        WritableCellFormat timesBoldUnderline2 = new WritableCellFormat(times14ptBoldUnderline);
        Label lr22 = new Label(6, 12, "Times 14 Bold Underline", timesBoldUnderline2);
        s1.addCell(lr22);
        WritableFont arial18ptBoldItalicUnderline = new WritableFont(WritableFont.ARIAL, 18, WritableFont.BOLD, true, UnderlineStyle.SINGLE);
        WritableCellFormat arialBoldItalicUnderline = new WritableCellFormat(arial18ptBoldItalicUnderline);
        Label lr23 = new Label(6, 13, "Arial 18 Bold Italic Underline", arialBoldItalicUnderline);
        s1.addCell(lr23);
        Label lr24 = new Label(0, 15, "Script styles");
        s1.addCell(lr24);
        WritableFont superscript = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUPERSCRIPT);
        WritableCellFormat superscriptFormat = new WritableCellFormat(superscript);
        Label lr25 = new Label(1, 15, "superscript", superscriptFormat);
        s1.addCell(lr25);
        WritableFont subscript = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLACK, ScriptStyle.SUBSCRIPT);
        WritableCellFormat subscriptFormat = new WritableCellFormat(subscript);
        Label lr26 = new Label(2, 15, "subscript", subscriptFormat);
        s1.addCell(lr26);
        Label lr27 = new Label(0, 17, "Colours");
        s1.addCell(lr27);
        WritableFont red = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.RED);
        WritableCellFormat redFormat = new WritableCellFormat(red);
        Label lr28 = new Label(2, 17, "Red", redFormat);
        s1.addCell(lr28);
        WritableFont blue = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.BLUE);
        WritableCellFormat blueFormat = new WritableCellFormat(blue);
        Label lr29 = new Label(2, 18, "Blue", blueFormat);
        s1.addCell(lr29);
        WritableFont lime = new WritableFont(WritableFont.ARIAL);
        lime.setColour(Colour.LIME);
        WritableCellFormat limeFormat = new WritableCellFormat(lime);
        limeFormat.setWrap(true);
        Label lr30 = new Label(4, 18, "Modified palette - was lime, now red", limeFormat);
        s1.addCell(lr30);
        WritableCellFormat greyBackground = new WritableCellFormat();
        greyBackground.setWrap(true);
        greyBackground.setBackground(Colour.GRAY_50);
        Label lr31 = new Label(2, 19, "Grey background", greyBackground);
        s1.addCell(lr31);
        WritableFont yellow = new WritableFont(WritableFont.ARIAL, 10, WritableFont.NO_BOLD, false, UnderlineStyle.NO_UNDERLINE, Colour.YELLOW);
        WritableCellFormat yellowOnBlue = new WritableCellFormat(yellow);
        yellowOnBlue.setWrap(true);
        yellowOnBlue.setBackground(Colour.BLUE);
        Label lr32 = new Label(2, 20, "Blue background, yellow foreground", yellowOnBlue);
        s1.addCell(lr32);
        WritableCellFormat yellowOnBlack = new WritableCellFormat(yellow);
        yellowOnBlack.setWrap(true);
        yellowOnBlack.setBackground(Colour.PALETTE_BLACK);
        Label lr33 = new Label(3, 20, "Black background, yellow foreground", yellowOnBlack);
        s1.addCell(lr33);
        Label lr34 = new Label(0, 22, "Null label");
        s1.addCell(lr34);
        Label lr35 = new Label(2, 22, (String) null);
        s1.addCell(lr35);
        Label lr36 = new Label(0, 24, "A very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nA very long label, more than 255 characters\nRejoice O shores\nSing O bells\nBut I with mournful tread\nWalk the deck my captain lies\nFallen cold and dead\nSummer surprised, coming over the Starnbergersee\nWith a shower of rain. We stopped in the Colonnade\nAnd sat and drank coffee an talked for an hour\n", arial12format2);
        s1.addCell(lr36);
        WritableCellFormat vertical = new WritableCellFormat();
        vertical.setOrientation(Orientation.VERTICAL);
        Label lr37 = new Label(0, 26, "Vertical orientation", vertical);
        s1.addCell(lr37);
        WritableCellFormat plus_90 = new WritableCellFormat();
        plus_90.setOrientation(Orientation.PLUS_90);
        Label lr38 = new Label(1, 26, "Plus 90", plus_90);
        s1.addCell(lr38);
        WritableCellFormat minus_90 = new WritableCellFormat();
        minus_90.setOrientation(Orientation.MINUS_90);
        Label lr39 = new Label(2, 26, "Minus 90", minus_90);
        s1.addCell(lr39);
        Label lr40 = new Label(0, 28, "Modified row height");
        s1.addCell(lr40);
        s1.setRowView(28, 480);
        Label lr41 = new Label(0, 29, "Collapsed row");
        s1.addCell(lr41);
        s1.setRowView(29, true);
        try {
            Label l = new Label(0, 30, "Hyperlink to home page");
            s1.addCell(l);
            URL url = new URL("http://www.andykhan.com/jexcelapi");
            WritableHyperlink wh = new WritableHyperlink(0, 30, 8, 31, url);
            s1.addHyperlink(wh);
            WritableHyperlink wh2 = new WritableHyperlink(7, 30, 9, 31, url);
            s1.addHyperlink(wh2);
            try {
                Label l2 = new Label(4, 2, "File hyperlink to documentation");
                s1.addCell(l2);
                File file = new File("../jexcelapi/docs/index.html");
                WritableHyperlink wh3 = new WritableHyperlink(0, 32, 8, 32, file, "JExcelApi Documentation");
                s1.addHyperlink(wh3);
                timesBoldUnderline = timesBoldUnderline2;
                times12pt = times12pt2;
                arial12format = arial12format2;
                i = 12;
            } catch (MalformedURLException e) {
                e = e;
                times12pt = times12pt2;
                arial12format = arial12format2;
                timesBoldUnderline = timesBoldUnderline2;
                i = 12;
            }
        } catch (MalformedURLException e2) {
            e = e2;
            times12pt = times12pt2;
            arial12format = arial12format2;
            timesBoldUnderline = timesBoldUnderline2;
            i = 12;
        }
        try {
            WritableHyperlink wh4 = new WritableHyperlink(0, 34, 8, 34, "Link to another cell", s1, 0, 180, 1, 181);
            s1.addHyperlink(wh4);
            File file2 = new File("\\\\localhost\\file.txt");
            WritableHyperlink wh5 = new WritableHyperlink(0, 36, 8, 36, file2);
            s1.addHyperlink(wh5);
            WritableHyperlink wh6 = new WritableHyperlink(0, 38, 0, 38, new URL("http://www.amazon.co.uk/exec/obidos/ASIN/0571058086/qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664"));
            s1.addHyperlink(wh6);
        } catch (MalformedURLException e3) {
            e = e3;
            System.err.println(e.toString());
            Label l3 = new Label(5, 35, "Merged cells", timesBoldUnderline);
            s1.mergeCells(5, 35, 8, 37);
            s1.addCell(l3);
            Label l4 = new Label(5, 38, "More merged cells");
            s1.addCell(l4);
            Range r = s1.mergeCells(5, 38, 8, 41);
            s1.insertRow(40);
            s1.removeRow(39);
            s1.unmergeCells(r);
            WritableCellFormat wcf = new WritableCellFormat();
            wcf.setAlignment(Alignment.CENTRE);
            Label l5 = new Label(5, 42, "Centred across merged cells", wcf);
            s1.addCell(l5);
            s1.mergeCells(5, 42, 10, 42);
            WritableCellFormat wcf2 = new WritableCellFormat();
            wcf2.setBorder(Border.ALL, BorderLineStyle.THIN);
            wcf2.setBackground(Colour.GRAY_25);
            Label l6 = new Label(3, 44, "Merged with border", wcf2);
            s1.addCell(l6);
            s1.mergeCells(3, 44, 4, 46);
            WritableFont courier10ptFont = new WritableFont(WritableFont.COURIER, 10);
            WritableCellFormat courier10pt = new WritableCellFormat(courier10ptFont);
            Label l7 = new Label(0, 49, "Courier fonts", courier10pt);
            s1.addCell(l7);
            WritableFont tahoma12ptFont = new WritableFont(WritableFont.TAHOMA, i);
            WritableCellFormat tahoma12pt = new WritableCellFormat(tahoma12ptFont);
            Label l8 = new Label(0, 50, "Tahoma fonts", tahoma12pt);
            s1.addCell(l8);
            WritableFont.FontName wingdingsFont = WritableFont.createFont("Wingdings 2");
            WritableFont wingdings210ptFont = new WritableFont(wingdingsFont, 10);
            WritableCellFormat wingdings210pt = new WritableCellFormat(wingdings210ptFont);
            Label l9 = new Label(0, 51, "Bespoke Windgdings 2", wingdings210pt);
            s1.addCell(l9);
            WritableFont times12pt3 = times12pt;
            WritableCellFormat shrinkToFit = new WritableCellFormat(times12pt3);
            shrinkToFit.setShrinkToFit(true);
            Label l10 = new Label(3, 53, "Shrunk to fit", shrinkToFit);
            s1.addCell(l10);
            Label l11 = new Label(3, 55, "Some long wrapped text in a merged cell", arial12format);
            s1.addCell(l11);
            s1.mergeCells(3, 55, 4, 55);
            Label l12 = new Label(0, 57, "A cell with a comment");
            WritableCellFeatures cellFeatures = new WritableCellFeatures();
            cellFeatures.setComment("the cell comment");
            l12.setCellFeatures(cellFeatures);
            s1.addCell(l12);
            Label l13 = new Label(0, 59, "A cell with a long comment");
            WritableCellFeatures cellFeatures2 = new WritableCellFeatures();
            cellFeatures2.setComment("a very long cell comment indeed that won't fit inside a standard comment box, so a larger comment box is used instead", 5.0d, 6.0d);
            l13.setCellFeatures(cellFeatures2);
            s1.addCell(l13);
            WritableCellFormat indented = new WritableCellFormat(times12pt3);
            indented.setIndentation(4);
            Label l14 = new Label(0, 61, "Some indented text", indented);
            s1.addCell(l14);
            Label l15 = new Label(0, 63, "Data validation:  list");
            s1.addCell(l15);
            Blank b = new Blank(1, 63);
            WritableCellFeatures cellFeatures3 = new WritableCellFeatures();
            ArrayList al = new ArrayList();
            al.add("bagpuss");
            al.add("clangers");
            al.add("ivor the engine");
            al.add("noggin the nog");
            cellFeatures3.setDataValidationList(al);
            b.setCellFeatures(cellFeatures3);
            s1.addCell(b);
            Label l16 = new Label(0, 64, "Data validation:  number > 4.5");
            s1.addCell(l16);
            Blank b2 = new Blank(1, 64);
            WritableCellFeatures cellFeatures4 = new WritableCellFeatures();
            cellFeatures4.setNumberValidation(4.5d, WritableCellFeatures.GREATER_THAN);
            b2.setCellFeatures(cellFeatures4);
            s1.addCell(b2);
            Label l17 = new Label(0, 65, "Data validation:  named range");
            s1.addCell(l17);
            Label l18 = new Label(4, 65, "tiger");
            s1.addCell(l18);
            Label l19 = new Label(5, 65, "sword");
            s1.addCell(l19);
            Label l20 = new Label(6, 65, "honour");
            s1.addCell(l20);
            Label l21 = new Label(7, 65, "company");
            s1.addCell(l21);
            Label l22 = new Label(8, 65, "victory");
            s1.addCell(l22);
            Label l23 = new Label(9, 65, "fortress");
            s1.addCell(l23);
            Blank b3 = new Blank(1, 65);
            WritableCellFeatures cellFeatures5 = new WritableCellFeatures();
            cellFeatures5.setDataValidationRange("validation_range");
            b3.setCellFeatures(cellFeatures5);
            s1.addCell(b3);
            s1.setRowGroup(39, 45, false);
            Label l24 = new Label(0, 66, "Block of cells B67-F71 with data validation");
            s1.addCell(l24);
            ArrayList al2 = new ArrayList();
            al2.add("Achilles");
            al2.add("Agamemnon");
            al2.add("Hector");
            al2.add("Odysseus");
            al2.add("Patroclus");
            al2.add("Nestor");
            Blank b4 = new Blank(1, 66);
            WritableCellFeatures cellFeatures6 = new WritableCellFeatures();
            cellFeatures6.setDataValidationList(al2);
            b4.setCellFeatures(cellFeatures6);
            s1.addCell(b4);
            s1.applySharedDataValidation(b4, 4, 4);
            WritableCellFeatures cellFeatures7 = new WritableCellFeatures();
            cellFeatures7.setDataValidationRange("");
            Label l25 = new Label(0, 71, "Read only cell using empty data validation");
            l25.setCellFeatures(cellFeatures7);
            s1.addCell(l25);
            s1.setRowGroup(39, 45, false);
        }
        Label l32 = new Label(5, 35, "Merged cells", timesBoldUnderline);
        s1.mergeCells(5, 35, 8, 37);
        s1.addCell(l32);
        Label l42 = new Label(5, 38, "More merged cells");
        s1.addCell(l42);
        Range r2 = s1.mergeCells(5, 38, 8, 41);
        s1.insertRow(40);
        s1.removeRow(39);
        s1.unmergeCells(r2);
        WritableCellFormat wcf3 = new WritableCellFormat();
        wcf3.setAlignment(Alignment.CENTRE);
        Label l52 = new Label(5, 42, "Centred across merged cells", wcf3);
        s1.addCell(l52);
        s1.mergeCells(5, 42, 10, 42);
        WritableCellFormat wcf22 = new WritableCellFormat();
        wcf22.setBorder(Border.ALL, BorderLineStyle.THIN);
        wcf22.setBackground(Colour.GRAY_25);
        Label l62 = new Label(3, 44, "Merged with border", wcf22);
        s1.addCell(l62);
        s1.mergeCells(3, 44, 4, 46);
        WritableFont courier10ptFont2 = new WritableFont(WritableFont.COURIER, 10);
        WritableCellFormat courier10pt2 = new WritableCellFormat(courier10ptFont2);
        Label l72 = new Label(0, 49, "Courier fonts", courier10pt2);
        s1.addCell(l72);
        WritableFont tahoma12ptFont2 = new WritableFont(WritableFont.TAHOMA, i);
        WritableCellFormat tahoma12pt2 = new WritableCellFormat(tahoma12ptFont2);
        Label l82 = new Label(0, 50, "Tahoma fonts", tahoma12pt2);
        s1.addCell(l82);
        WritableFont.FontName wingdingsFont2 = WritableFont.createFont("Wingdings 2");
        WritableFont wingdings210ptFont2 = new WritableFont(wingdingsFont2, 10);
        WritableCellFormat wingdings210pt2 = new WritableCellFormat(wingdings210ptFont2);
        Label l92 = new Label(0, 51, "Bespoke Windgdings 2", wingdings210pt2);
        s1.addCell(l92);
        WritableFont times12pt32 = times12pt;
        WritableCellFormat shrinkToFit2 = new WritableCellFormat(times12pt32);
        shrinkToFit2.setShrinkToFit(true);
        Label l102 = new Label(3, 53, "Shrunk to fit", shrinkToFit2);
        s1.addCell(l102);
        Label l112 = new Label(3, 55, "Some long wrapped text in a merged cell", arial12format);
        s1.addCell(l112);
        s1.mergeCells(3, 55, 4, 55);
        Label l122 = new Label(0, 57, "A cell with a comment");
        WritableCellFeatures cellFeatures8 = new WritableCellFeatures();
        cellFeatures8.setComment("the cell comment");
        l122.setCellFeatures(cellFeatures8);
        s1.addCell(l122);
        Label l132 = new Label(0, 59, "A cell with a long comment");
        WritableCellFeatures cellFeatures22 = new WritableCellFeatures();
        cellFeatures22.setComment("a very long cell comment indeed that won't fit inside a standard comment box, so a larger comment box is used instead", 5.0d, 6.0d);
        l132.setCellFeatures(cellFeatures22);
        s1.addCell(l132);
        WritableCellFormat indented2 = new WritableCellFormat(times12pt32);
        indented2.setIndentation(4);
        Label l142 = new Label(0, 61, "Some indented text", indented2);
        s1.addCell(l142);
        Label l152 = new Label(0, 63, "Data validation:  list");
        s1.addCell(l152);
        Blank b5 = new Blank(1, 63);
        WritableCellFeatures cellFeatures32 = new WritableCellFeatures();
        ArrayList al3 = new ArrayList();
        al3.add("bagpuss");
        al3.add("clangers");
        al3.add("ivor the engine");
        al3.add("noggin the nog");
        cellFeatures32.setDataValidationList(al3);
        b5.setCellFeatures(cellFeatures32);
        s1.addCell(b5);
        Label l162 = new Label(0, 64, "Data validation:  number > 4.5");
        s1.addCell(l162);
        Blank b22 = new Blank(1, 64);
        WritableCellFeatures cellFeatures42 = new WritableCellFeatures();
        cellFeatures42.setNumberValidation(4.5d, WritableCellFeatures.GREATER_THAN);
        b22.setCellFeatures(cellFeatures42);
        s1.addCell(b22);
        Label l172 = new Label(0, 65, "Data validation:  named range");
        s1.addCell(l172);
        Label l182 = new Label(4, 65, "tiger");
        s1.addCell(l182);
        Label l192 = new Label(5, 65, "sword");
        s1.addCell(l192);
        Label l202 = new Label(6, 65, "honour");
        s1.addCell(l202);
        Label l212 = new Label(7, 65, "company");
        s1.addCell(l212);
        Label l222 = new Label(8, 65, "victory");
        s1.addCell(l222);
        Label l232 = new Label(9, 65, "fortress");
        s1.addCell(l232);
        Blank b32 = new Blank(1, 65);
        WritableCellFeatures cellFeatures52 = new WritableCellFeatures();
        cellFeatures52.setDataValidationRange("validation_range");
        b32.setCellFeatures(cellFeatures52);
        s1.addCell(b32);
        s1.setRowGroup(39, 45, false);
        Label l242 = new Label(0, 66, "Block of cells B67-F71 with data validation");
        s1.addCell(l242);
        ArrayList al22 = new ArrayList();
        al22.add("Achilles");
        al22.add("Agamemnon");
        al22.add("Hector");
        al22.add("Odysseus");
        al22.add("Patroclus");
        al22.add("Nestor");
        Blank b42 = new Blank(1, 66);
        WritableCellFeatures cellFeatures62 = new WritableCellFeatures();
        cellFeatures62.setDataValidationList(al22);
        b42.setCellFeatures(cellFeatures62);
        s1.addCell(b42);
        s1.applySharedDataValidation(b42, 4, 4);
        WritableCellFeatures cellFeatures72 = new WritableCellFeatures();
        cellFeatures72.setDataValidationRange("");
        Label l252 = new Label(0, 71, "Read only cell using empty data validation");
        l252.setCellFeatures(cellFeatures72);
        s1.addCell(l252);
        s1.setRowGroup(39, 45, false);
    }

    private void writeBordersSheet(WritableSheet s) throws WriteException {
        s.getSettings().setProtected(true);
        s.setColumnView(1, 15);
        s.setColumnView(2, 15);
        s.setColumnView(4, 15);
        WritableCellFormat thickLeft = new WritableCellFormat();
        thickLeft.setBorder(Border.LEFT, BorderLineStyle.THICK);
        Label lr = new Label(1, 0, "Thick left", thickLeft);
        s.addCell(lr);
        WritableCellFormat dashedRight = new WritableCellFormat();
        dashedRight.setBorder(Border.RIGHT, BorderLineStyle.DASHED);
        Label lr2 = new Label(2, 0, "Dashed right", dashedRight);
        s.addCell(lr2);
        WritableCellFormat doubleTop = new WritableCellFormat();
        doubleTop.setBorder(Border.TOP, BorderLineStyle.DOUBLE);
        Label lr3 = new Label(1, 2, "Double top", doubleTop);
        s.addCell(lr3);
        WritableCellFormat hairBottom = new WritableCellFormat();
        hairBottom.setBorder(Border.BOTTOM, BorderLineStyle.HAIR);
        Label lr4 = new Label(2, 2, "Hair bottom", hairBottom);
        s.addCell(lr4);
        WritableCellFormat allThin = new WritableCellFormat();
        allThin.setBorder(Border.ALL, BorderLineStyle.THIN);
        Label lr5 = new Label(4, 2, "All thin", allThin);
        s.addCell(lr5);
        WritableCellFormat twoBorders = new WritableCellFormat();
        twoBorders.setBorder(Border.TOP, BorderLineStyle.THICK);
        twoBorders.setBorder(Border.LEFT, BorderLineStyle.THICK);
        Label lr6 = new Label(6, 2, "Two borders", twoBorders);
        s.addCell(lr6);
        Label lr7 = new Label(20, 20, "Dislocated cell - after a page break");
        s.addCell(lr7);
        s.getSettings().setPaperSize(PaperSize.A3);
        s.getSettings().setOrientation(PageOrientation.LANDSCAPE);
        s.getSettings().setPageOrder(PageOrder.DOWN_THEN_RIGHT);
        s.getSettings().setHeaderMargin(2.0d);
        s.getSettings().setFooterMargin(2.0d);
        s.getSettings().setTopMargin(3.0d);
        s.getSettings().setBottomMargin(3.0d);
        HeaderFooter header = new HeaderFooter();
        header.getCentre().append("Page Header");
        s.getSettings().setHeader(header);
        HeaderFooter footer = new HeaderFooter();
        footer.getRight().append("page ");
        footer.getRight().appendPageNumber();
        s.getSettings().setFooter(footer);
        s.addRowPageBreak(18);
        s.insertRow(17);
        s.insertRow(17);
        s.removeRow(17);
        s.addRowPageBreak(30);
        Label lr8 = new Label(10, 1, "Hidden column");
        s.addCell(lr8);
        Label lr9 = new Label(3, 8, "Hidden row");
        s.addCell(lr9);
        s.setRowView(8, true);
        WritableCellFormat allThickRed = new WritableCellFormat();
        allThickRed.setBorder(Border.ALL, BorderLineStyle.THICK, Colour.RED);
        Label lr10 = new Label(1, 5, "All thick red", allThickRed);
        s.addCell(lr10);
        WritableCellFormat topBottomBlue = new WritableCellFormat();
        topBottomBlue.setBorder(Border.TOP, BorderLineStyle.THIN, Colour.BLUE);
        topBottomBlue.setBorder(Border.BOTTOM, BorderLineStyle.THIN, Colour.BLUE);
        Label lr11 = new Label(4, 5, "Top and bottom blue", topBottomBlue);
        s.addCell(lr11);
    }

    private void writeLabelsSheet(WritableSheet ws) throws WriteException {
        ws.getSettings().setProtected(true);
        ws.getSettings().setPassword("jxl");
        ws.getSettings().setVerticalFreeze(5);
        ws.getSettings().setDefaultRowHeight(500);
        WritableFont wf = new WritableFont(WritableFont.ARIAL, 12);
        wf.setItalic(true);
        WritableCellFormat wcf = new WritableCellFormat(wf);
        CellView cv = new CellView();
        cv.setSize(6400);
        cv.setFormat(wcf);
        ws.setColumnView(0, cv);
        ws.setColumnView(1, 15);
        for (int i = 0; i < 61; i++) {
            Label l1 = new Label(0, i, "Common Label");
            Label l2 = new Label(1, i, "Distinct label number " + i);
            ws.addCell(l1);
            ws.addCell(l2);
        }
        Label l3 = new Label(0, 61, "Common Label", wcf);
        Label l4 = new Label(1, 61, "1-1234567890", wcf);
        Label l5 = new Label(2, 61, "2-1234567890", wcf);
        ws.addCell(l3);
        ws.addCell(l4);
        ws.addCell(l5);
        for (int i2 = 62; i2 < 200; i2++) {
            Label l12 = new Label(0, i2, "Common Label");
            Label l22 = new Label(1, i2, "Distinct label number " + i2);
            ws.addCell(l12);
            ws.addCell(l22);
        }
        WritableFont wf2 = new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD);
        wf2.setColour(Colour.RED);
        WritableCellFormat wcf2 = new WritableCellFormat(wf2);
        wcf2.setWrap(true);
        Label l = new Label(0, 205, "Different format", wcf2);
        ws.addCell(l);
        Label l6 = new Label(5, 2, "A column for autosizing", wcf2);
        ws.addCell(l6);
        Label l62 = new Label(5, 4, "Another label, longer this time and in a different font");
        ws.addCell(l62);
        CellView cf = new CellView();
        cf.setAutosize(true);
        ws.setColumnView(5, cf);
    }

    private void writeFormulaSheet(WritableSheet ws) throws WriteException {
        Number nc = new Number(0, 0, 15.0d);
        ws.addCell(nc);
        Number nc2 = new Number(0, 1, 16.0d);
        ws.addCell(nc2);
        Number nc3 = new Number(0, 2, 10.0d);
        ws.addCell(nc3);
        Number nc4 = new Number(0, 3, 12.0d);
        ws.addCell(nc4);
        ws.setColumnView(2, 20);
        WritableCellFormat wcf = new WritableCellFormat();
        wcf.setAlignment(Alignment.RIGHT);
        wcf.setWrap(true);
        CellView cv = new CellView();
        cv.setSize(6400);
        cv.setFormat(wcf);
        ws.setColumnView(3, cv);
        Formula f = new Formula(2, 0, "A1+A2");
        ws.addCell(f);
        Label l = new Label(3, 0, "a1+a2");
        ws.addCell(l);
        Formula f2 = new Formula(2, 1, "A2 * 3");
        ws.addCell(f2);
        Label l2 = new Label(3, 1, "A2 * 3");
        ws.addCell(l2);
        Formula f3 = new Formula(2, 2, "A2+A1/2.5");
        ws.addCell(f3);
        Label l3 = new Label(3, 2, "A2+A1/2.5");
        ws.addCell(l3);
        Formula f4 = new Formula(2, 3, "3+(a1+a2)/2.5");
        ws.addCell(f4);
        Label l4 = new Label(3, 3, "3+(a1+a2)/2.5");
        ws.addCell(l4);
        Formula f5 = new Formula(2, 4, "(a1+a2)/2.5");
        ws.addCell(f5);
        Label l5 = new Label(3, 4, "(a1+a2)/2.5");
        ws.addCell(l5);
        Formula f6 = new Formula(2, 5, "15+((a1+a2)/2.5)*17");
        ws.addCell(f6);
        Label l6 = new Label(3, 5, "15+((a1+a2)/2.5)*17");
        ws.addCell(l6);
        Formula f7 = new Formula(2, 6, "SUM(a1:a4)");
        ws.addCell(f7);
        Label l7 = new Label(3, 6, "SUM(a1:a4)");
        ws.addCell(l7);
        Formula f8 = new Formula(2, 7, "SUM(a1:a4)/4");
        ws.addCell(f8);
        Label l8 = new Label(3, 7, "SUM(a1:a4)/4");
        ws.addCell(l8);
        Formula f9 = new Formula(2, 8, "AVERAGE(A1:A4)");
        ws.addCell(f9);
        Label l9 = new Label(3, 8, "AVERAGE(a1:a4)");
        ws.addCell(l9);
        Formula f10 = new Formula(2, 9, "MIN(5,4,1,2,3)");
        ws.addCell(f10);
        Label l10 = new Label(3, 9, "MIN(5,4,1,2,3)");
        ws.addCell(l10);
        Formula f11 = new Formula(2, 10, "ROUND(3.14159265, 3)");
        ws.addCell(f11);
        Label l11 = new Label(3, 10, "ROUND(3.14159265, 3)");
        ws.addCell(l11);
        Formula f12 = new Formula(2, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))");
        ws.addCell(f12);
        Label l12 = new Label(3, 11, "MAX(SUM(A1:A2), A1*A2, POWER(A1, 2))");
        ws.addCell(l12);
        Formula f13 = new Formula(2, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")");
        ws.addCell(f13);
        Label l13 = new Label(3, 12, "IF(A2>A1, \"A2 bigger\", \"A1 bigger\")");
        ws.addCell(l13);
        Formula f14 = new Formula(2, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")");
        ws.addCell(f14);
        Label l14 = new Label(3, 13, "IF(A2<=A1, \"A2 smaller\", \"A1 smaller\")");
        ws.addCell(l14);
        Formula f15 = new Formula(2, 14, "IF(A3<=10, \"<= 10\")");
        ws.addCell(f15);
        Label l15 = new Label(3, 14, "IF(A3<=10, \"<= 10\")");
        ws.addCell(l15);
        Formula f16 = new Formula(2, 15, "SUM(1,2,3,4,5)");
        ws.addCell(f16);
        Label l16 = new Label(3, 15, "SUM(1,2,3,4,5)");
        ws.addCell(l16);
        Formula f17 = new Formula(2, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")");
        ws.addCell(f17);
        Label l17 = new Label(3, 16, "HYPERLINK(\"http://www.andykhan.com/jexcelapi\", \"JExcelApi Home Page\")");
        ws.addCell(l17);
        Formula f18 = new Formula(2, 17, "3*4+5");
        ws.addCell(f18);
        Label l18 = new Label(3, 17, "3*4+5");
        ws.addCell(l18);
        Formula f19 = new Formula(2, 18, "\"Plain text formula\"");
        ws.addCell(f19);
        Label l19 = new Label(3, 18, "Plain text formula");
        ws.addCell(l19);
        Formula f20 = new Formula(2, 19, "SUM(a1,a2,-a3,a4)");
        ws.addCell(f20);
        Label l20 = new Label(3, 19, "SUM(a1,a2,-a3,a4)");
        ws.addCell(l20);
        Formula f21 = new Formula(2, 20, "2*-(a1+a2)");
        ws.addCell(f21);
        Label l21 = new Label(3, 20, "2*-(a1+a2)");
        ws.addCell(l21);
        Formula f22 = new Formula(2, 21, "'Number Formats'!B1/2");
        ws.addCell(f22);
        Label l22 = new Label(3, 21, "'Number Formats'!B1/2");
        ws.addCell(l22);
        Formula f23 = new Formula(2, 22, "IF(F22=0, 0, F21/F22)");
        ws.addCell(f23);
        Label l23 = new Label(3, 22, "IF(F22=0, 0, F21/F22)");
        ws.addCell(l23);
        Formula f24 = new Formula(2, 23, "RAND()");
        ws.addCell(f24);
        Label l24 = new Label(3, 23, "RAND()");
        ws.addCell(l24);
        StringBuffer buf = new StringBuffer();
        buf.append("'");
        buf.append(this.workbook.getSheet(0).getName());
        buf.append("'!");
        buf.append(CellReferenceHelper.getCellReference(9, 18));
        buf.append("*25");
        Formula f25 = new Formula(2, 24, buf.toString());
        ws.addCell(f25);
        Label l25 = new Label(3, 24, buf.toString());
        ws.addCell(l25);
        Formula f26 = new Formula(2, 25, "NOW()", new WritableCellFormat(DateFormats.DEFAULT));
        ws.addCell(f26);
        Label l26 = new Label(3, 25, "NOW()");
        ws.addCell(l26);
        Formula f27 = new Formula(2, 26, "$A$2+A3");
        ws.addCell(f27);
        Label l27 = new Label(3, 26, "$A$2+A3");
        ws.addCell(l27);
        Formula f28 = new Formula(2, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))");
        ws.addCell(f28);
        Label l28 = new Label(3, 27, "IF(COUNT(A1:A9,B1:B9)=0,\"\",COUNT(A1:A9,B1:B9))");
        ws.addCell(l28);
        Formula f29 = new Formula(2, 28, "SUM(A1,A2,A3,A4)");
        ws.addCell(f29);
        Label l29 = new Label(3, 28, "SUM(A1,A2,A3,A4)");
        ws.addCell(l29);
        Label l30 = new Label(1, 29, "a1");
        ws.addCell(l30);
        Formula f30 = new Formula(2, 29, "SUM(INDIRECT(ADDRESS(2,29)):A4)");
        ws.addCell(f30);
        Label l31 = new Label(3, 29, "SUM(INDIRECT(ADDRESS(2,29):A4)");
        ws.addCell(l31);
        Formula f31 = new Formula(2, 30, "COUNTIF(A1:A4, \">=12\")");
        ws.addCell(f31);
        Label l32 = new Label(3, 30, "COUNTIF(A1:A4, \">=12\")");
        ws.addCell(l32);
        Formula f32 = new Formula(2, 31, "MAX($A$1:$A$4)");
        ws.addCell(f32);
        Label l33 = new Label(3, 31, "MAX($A$1:$A$4)");
        ws.addCell(l33);
        Formula f33 = new Formula(2, 32, "OR(A1,TRUE)");
        ws.addCell(f33);
        Label l34 = new Label(3, 32, "OR(A1,TRUE)");
        ws.addCell(l34);
        Formula f34 = new Formula(2, 33, "ROWS(A1:C14)");
        ws.addCell(f34);
        Label l35 = new Label(3, 33, "ROWS(A1:C14)");
        ws.addCell(l35);
        Formula f35 = new Formula(2, 34, "COUNTBLANK(A1:C14)");
        ws.addCell(f35);
        Label l36 = new Label(3, 34, "COUNTBLANK(A1:C14)");
        ws.addCell(l36);
        Formula f36 = new Formula(2, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)");
        ws.addCell(f36);
        Label l37 = new Label(3, 35, "IF(((F1=\"Not Found\")*(F2=\"Not Found\")*(F3=\"\")*(F4=\"\")*(F5=\"\")),1,0)");
        ws.addCell(l37);
        Formula f37 = new Formula(2, 36, "HYPERLINK(\"http://www.amazon.co.uk/exec/obidos/ASIN/0571058086qid=1099836249/sr=1-3/ref=sr_1_11_3/202-6017285-1620664\",  \"Long hyperlink\")");
        ws.addCell(f37);
        Formula f38 = new Formula(2, 37, "1234567+2699");
        ws.addCell(f38);
        Label l38 = new Label(3, 37, "1234567+2699");
        ws.addCell(l38);
        Formula f39 = new Formula(2, 38, "IF(ISERROR(G25/G29),0,-1)");
        ws.addCell(f39);
        Label l39 = new Label(3, 38, "IF(ISERROR(G25/G29),0,-1)");
        ws.addCell(l39);
        Formula f40 = new Formula(2, 39, "SEARCH(\"C\",D40)");
        ws.addCell(f40);
        Label l40 = new Label(3, 39, "SEARCH(\"C\",D40)");
        ws.addCell(l40);
        Formula f41 = new Formula(2, 40, "#REF!");
        ws.addCell(f41);
        Label l41 = new Label(3, 40, "#REF!");
        ws.addCell(l41);
        Number nc5 = new Number(1, 41, 79.0d);
        ws.addCell(nc5);
        Formula f42 = new Formula(2, 41, "--B42");
        ws.addCell(f42);
        Label l42 = new Label(3, 41, "--B42");
        ws.addCell(l42);
        Formula f43 = new Formula(2, 42, "CHOOSE(3,A1,A2,A3,A4");
        ws.addCell(f43);
        Label l43 = new Label(3, 42, "CHOOSE(3,A1,A2,A3,A4");
        ws.addCell(l43);
        Formula f44 = new Formula(2, 43, "A4-A3-A2");
        ws.addCell(f44);
        Label l44 = new Label(3, 43, "A4-A3-A2");
        ws.addCell(l44);
        Formula f45 = new Formula(2, 44, "F29+F34+F41+F48+F55+F62+F69+F76+F83+F90+F97+F104+F111+F118+F125+F132+F139+F146+F153+F160+F167+F174+F181+F188+F195+F202+F209+F216+F223+F230+F237+F244+F251+F258+F265+F272+F279+F286+F293+F300+F305+F308");
        ws.addCell(f45);
        Label l45 = new Label(3, 44, "F29+F34+F41+F48+F55+F62+F69+F76+F83+F90+F97+F104+F111+F118+F125+F132+F139+F146+F153+F160+F167+F174+F181+F188+F195+F202+F209+F216+F223+F230+F237+F244+F251+F258+F265+F272+F279+F286+F293+F300+F305+F308");
        ws.addCell(l45);
        Number nc6 = new Number(1, 45, 17.0d);
        ws.addCell(nc6);
        Formula f46 = new Formula(2, 45, "formulavalue+5");
        ws.addCell(f46);
        Label l46 = new Label(3, 45, "formulavalue+5");
        ws.addCell(l46);
    }

    private void writeImageSheet(WritableSheet ws) throws WriteException {
        Label l = new Label(0, 0, "Weald & Downland Open Air Museum, Sussex");
        ws.addCell(l);
        WritableImage wi = new WritableImage(0.0d, 3.0d, 5.0d, 7.0d, new File("resources/wealdanddownland.png"));
        ws.addImage(wi);
        Label l2 = new Label(0, 12, "Merchant Adventurers Hall, York");
        ws.addCell(l2);
        WritableImage wi2 = new WritableImage(5.0d, 12.0d, 4.0d, 10.0d, new File("resources/merchantadventurers.png"));
        ws.addImage(wi2);
    }
}
